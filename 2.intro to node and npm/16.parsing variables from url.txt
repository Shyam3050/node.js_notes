const fs = require("fs");
const http = require("http");
const path = require("path");
const url = require("url");

function replaceTemplate(temp, product) {
  let output = temp.replace(/{%PRODUCTNAME%}/g, product.productName);
  output = output.replace(/{%IMAGE%}/g, product.image);
  output = output.replace(/{%PRICE%}/g, product.price);
  output = output.replace(/{%FROM%}/g, product.from);
  output = output.replace(/{%NUTRIENTS%}/g, product.nutrients);
  output = output.replace(/{%QUANTITY%}/g, product.quantity);
  output = output.replace(/{%DESCRIPTION%}/g, product.description);
  output = output.replace(/{%ID%}/g, product.id);

  if (!product.organic)
    output = output.replace(/{%NOT_ORGANIC%}/g, "not-organic");
  return output;
}

const data = fs.readFileSync(`${__dirname}/dev-data/data.json`, "utf-8");
const dataObj = JSON.parse(data);

const template_overview = fs.readFileSync(
  `${__dirname}/templates/template-overview.html`,
  "utf-8"
);
const template_product = fs.readFileSync(`${__dirname}/templates/template-product.html`, "utf-8")
const template_card = fs.readFileSync(
  `${__dirname}/templates/template-card.html`,
  "utf-8"
);

const server = http.createServer((req, res) => {
  const { query , pathname } = url.parse(req.url, true);
  if (pathname === "/api") {
    res.end(data);
  } else if (pathname === "/") {
    const cardsHtml = dataObj
      .map((el) => replaceTemplate(template_card, el))
      .join("");
    const output = template_overview.replace(/{%PRODUCT_CARDS%}/g, cardsHtml);

    res.end(output);
  } else if (pathname === "/product"){

    const cardHtml =  dataObj[query.id];
    const output = replaceTemplate(template_product, cardHtml)
    res.end(output)
  }
});

server.listen(8000, "127.0.0.1", () => {
  console.log("server start at port 8000");
});



// url.parse(req.url, boolean);
// its returns object.
 {
  protocol: null,
  slashes: null,
  auth: null,
  host: null,
  port: null,
  hostname: null,
  hash: null,
  search: '?id=10',
  query: 'id=10', // if boolean false
  pathname: '/product',
  path: '/product?id=10',
  href: '/product?id=10'
}

 {
  protocol: null,
  slashes: null,
  auth: null,
  host: null,
  port: null,
  hostname: null,
  hash: null,
  search: '?id=10',
  query: {id : 10 }, // if booleann true
  pathname: '/product',
  path: '/product?id=10',
  href: '/product?id=10'
}
